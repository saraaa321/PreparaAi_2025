import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import logo from "../../assets/logo.png";
import "../Css/Demografia.css";
import "../Geografia.jsx";

const demografiaData = [
  {
    id: "conceitos-basicos",
    titulo: "üåç Conceitos B√°sicos",
    descricao: 
      "Demografia √© a ci√™ncia que estuda as popula√ß√µes humanas, suas din√¢micas, caracter√≠sticas e distribui√ß√£o espacial. Busca compreender processos como natalidade, mortalidade, migra√ß√£o e crescimento populacional.",
    causas: [
      "Natalidade: N√∫mero de nascimentos em um determinado per√≠odo.",
      "Mortalidade: N√∫mero de √≥bitos registrados em uma popula√ß√£o.",
      "Migra√ß√£o: Deslocamento de indiv√≠duos entre diferentes regi√µes.",
      "Crescimento Populacional: Diferen√ßa entre natalidade e mortalidade, acrescida do saldo migrat√≥rio.",
    ],
    consequencias: [
      "Impacto nas pol√≠ticas p√∫blicas, como sa√∫de, educa√ß√£o e infraestrutura.",
      "Mudan√ßas na composi√ß√£o et√°ria e na estrutura social.",
      "Press√£o sobre recursos naturais e meio ambiente.",
    ],
    imagem: "https://static.todamateria.com.br/upload/de/mo/demografia-og.jpg",
  },
  {
    id: "transicao-demografica",
    titulo: "üìà Transi√ß√£o Demogr√°fica",
    descricao:
      "A transi√ß√£o demogr√°fica √© um modelo que descreve a transforma√ß√£o das popula√ß√µes de altas taxas de natalidade e mortalidade para taxas reduzidas, resultando em mudan√ßas significativas no crescimento populacional.",
    causas: [
      "Melhorias nas condi√ß√µes sanit√°rias e de sa√∫de p√∫blica.",
      "Acesso ampliado √† educa√ß√£o, principalmente feminina.",
      "Urbaniza√ß√£o e industrializa√ß√£o.",
      "Ado√ß√£o de m√©todos contraceptivos.",
    ],
    consequencias: [
      "Redu√ß√£o das taxas de fecundidade e crescimento populacional.",
      "Envelhecimento populacional.",
      "Mudan√ßas na estrutura econ√¥mica e social.",
      "Necessidade de pol√≠ticas de previd√™ncia e assist√™ncia √† popula√ß√£o idosa.",
    ],
    imagem: "https://static.mundoeducacao.uol.com.br/mundoeducacao/2023/04/ilustracao-de-tres-piramides-etarias-como-representacao-da-teoria-da-transicao-demografica.jpg",
  },
  {
    id: "piramide-etaria",
    titulo: "üèõÔ∏è Pir√¢mide Et√°ria",
    descricao:
      "Pir√¢mides et√°rias representam a distribui√ß√£o da popula√ß√£o por idade e sexo, permitindo a an√°lise das caracter√≠sticas demogr√°ficas e sociais de uma regi√£o.",
    causas: [
      "Altas taxas de natalidade produzem bases largas nas pir√¢mides.",
      "Redu√ß√£o na mortalidade aumenta a expectativa de vida.",
      "Fatores culturais, sociais e econ√¥micos influenciam as faixas et√°rias.",
    ],
    consequencias: [
      "Popula√ß√µes jovens: maior necessidade de investimentos em educa√ß√£o e emprego.",
      "Popula√ß√µes envelhecidas: maior demanda por servi√ßos de sa√∫de e previd√™ncia.",
      "Planejamento urbano e social direcionado √†s necessidades et√°rias.",
    ],
    imagem: "https://static.todamateria.com.br/upload/pi/ra/piramide-etaria-og.jpg?class=ogImageWide",
  },
  {
    id: "migracoes",
    titulo: "üö∂ Migra√ß√µes",
    descricao:
      "Migra√ß√£o √© o deslocamento de pessoas de uma regi√£o para outra, podendo ocorrer dentro de um mesmo pa√≠s (migra√ß√£o interna) ou entre pa√≠ses (migra√ß√£o internacional).",
    causas: [
      "Fatores econ√¥micos: busca por melhores condi√ß√µes de vida e emprego.",
      "Fatores pol√≠ticos: conflitos, persegui√ß√µes ou instabilidade.",
      "Fatores ambientais: desastres naturais, mudan√ßas clim√°ticas.",
      "Fatores sociais: redes familiares e culturais.",
    ],
    consequencias: [
      "Altera√ß√µes na composi√ß√£o populacional das regi√µes.",
      "Desafios na integra√ß√£o de migrantes e refugiados.",
      "Impactos econ√¥micos e sociais nas √°reas de origem e destino.",
      "Crescimento de √°reas urbanas e forma√ß√£o de periferias.",
    ],
    imagem: "https://jornal.usp.br/wp-content/uploads/2023/07/20230713_deslocamentoamericas.jpg",
  },
  {
    id: "desafios-populacionais",
    titulo: "‚öñÔ∏è Desafios Populacionais",
    descricao:
      "O crescimento e as transforma√ß√µes populacionais geram desafios para governos e sociedades, exigindo pol√≠ticas p√∫blicas eficazes para garantir qualidade de vida e desenvolvimento sustent√°vel.",
    causas: [
      "Superpopula√ß√£o em determinadas regi√µes.",
      "Envelhecimento populacional.",
      "Desigualdades socioecon√¥micas e de acesso a servi√ßos.",
      "Degrada√ß√£o ambiental causada pela press√£o demogr√°fica.",
    ],
    consequencias: [
      "Necessidade de pol√≠ticas de planejamento familiar.",
      "Promo√ß√£o de pol√≠ticas de inclus√£o social e econ√¥mica.",
      "Investimentos em infraestrutura, sa√∫de e educa√ß√£o.",
      "Ado√ß√£o de pr√°ticas de desenvolvimento sustent√°vel.",
    ],
    imagem: "https://www.ecodebate.com.br/wp-content/uploads/2012/08/2673-2.jpg",
  },
];

function Demografia() {
  const navigate = useNavigate();
  const [progresso, setProgresso] = useState({});
  const [itemAtivo, setItemAtivo] = useState(null);
  const [progressoTotal, setProgressoTotal] = useState(0);
  const [activeTab, setActiveTab] = useState({});

  useEffect(() => {
    const saved = localStorage.getItem("progresso_demografia");
    if (saved) setProgresso(JSON.parse(saved));

    const initialActiveTabs = {};
    demografiaData.forEach(item => {
      initialActiveTabs[item.id] = 'conceito';
    });
    setActiveTab(initialActiveTabs);
  }, []);

  useEffect(() => {
    atualizarProgressoGeral();
  }, [progresso, demografiaData]);

  const atualizarProgressoGeral = () => {
    const total = demografiaData.length;
    const concluidos = Object.values(progresso).filter(v => v).length;
    const percent = Math.round((concluidos / total) * 100);
    setProgressoTotal(percent);
  };

  const marcarComoConcluido = (id) => {
    const novoProgresso = { ...progresso, [id]: true };
    setProgresso(novoProgresso);
    localStorage.setItem("progresso_geologia", JSON.stringify(novoProgresso));
    showNotification('‚úì Conte√∫do marcado como conclu√≠do!', 'success');
  };

  const marcarComoNaoConcluido = (id) => {
    const novoProgresso = { ...progresso, [id]: false };
    setProgresso(novoProgresso);
    localStorage.setItem("progresso_geologia", JSON.stringify(novoProgresso));
    showNotification('‚úó Conte√∫do desmarcado.', 'info');
  };

  const toggleItemAtivo = (id) => {
    setItemAtivo(itemAtivo === id ? null : id);
  };

  const handleTabClick = (itemId, tab) => {
    setActiveTab(prev => ({ ...prev, [itemId]: tab }));
  };

  const voltar = () => {
    navigate('/');
  };

  return (
    <div className="revolucoes-wrapper">
      <header className="top-bar">
        <img src={logo} alt="Gabarita Mente" className="logo" />
        <div className="top-buttons">
          <button className="btn" onClick={() => alert("P√°gina 'Sobre N√≥s' em constru√ß√£o.")}>Sobre N√≥s</button>
          <button className="btn sair" onClick={() => alert("Voc√™ saiu com sucesso.")}>Sair</button>
        </div>
      </header>

      <main className="content">
        <div className="top-content">
          <button className="back-button" onClick={voltar}>Voltar</button>
        </div>

        <h1 className="titulo-principal">
          <span className="titulo-animado">Estudos Demogr√°ficos</span>
          <div className="subtitulo-principal">Explore os principais temas da Demografia</div>
        </h1>

        <div className="progress-bar-overall">
          <p className="progress-percent-overall">Progresso nesta mat√©ria: {progressoTotal}%</p>
          <div className="progress-fill-overall" style={{ width: `${progressoTotal}%` }}></div>
        </div>

        <div className="revolucoes-nav">
          <div className="nav-buttons">
            {demografiaData.map(item => (
              <button
                key={item.id}
                className={`nav-button ${itemAtivo === item.id ? 'active' : ''} ${progresso[item.id] ? 'completed' : ''}`}
                onClick={() => toggleItemAtivo(item.id)}
              >
                {item.titulo.split(' ')[0]}
                {progresso[item.id] && <span className="check-icon">‚úì</span>}
              </button>
            ))}
          </div>
        </div>

        {demografiaData.map((item) => (
          <section
            key={item.id}
            id={item.id}
            className={`revolucao-box ${itemAtivo === item.id ? 'active' : ''} ${progresso[item.id] ? 'completed' : ''}`}
          >
            <div className="revolucao-header" onClick={() => toggleItemAtivo(item.id)}>
              <h2>{item.titulo}</h2>
              <div className="expand-icon">{itemAtivo === item.id ? '‚àí' : '+'}</div>
            </div>

            {itemAtivo === item.id && (
              <div className="revolucao-content">
                <div className="revolucao-media">
                  <img src={item.imagem} alt={item.titulo} className="revolucao-img" />
                  {progresso[item.id] && <div className="completed-badge">Conclu√≠do</div>}
                </div>

                <div className="revolucao-info">
                  <div className="tabs">
                    <button
                      className={`tab-button ${activeTab[item.id] === 'conceito' ? 'active' : ''}`}
                      onClick={() => handleTabClick(item.id, 'conceito')}
                    >
                      Defini√ß√£o
                    </button>
                    <button
                      className={`tab-button ${activeTab[item.id] === 'causas' ? 'active' : ''}`}
                      onClick={() => handleTabClick(item.id, 'causas')}
                    >
                      Fatores
                    </button>
                    <button
                      className={`tab-button ${activeTab[item.id] === 'consequencias' ? 'active' : ''}`}
                      onClick={() => handleTabClick(item.id, 'consequencias')}
                    >
                      Impactos
                    </button>
                  </div>

                  <div className={`tab-content ${activeTab[item.id] === 'conceito' ? 'active' : ''}`}>
                    <p className="revolucao-descricao">{item.descricao}</p>
                  </div>

                  <div className={`tab-content ${activeTab[item.id] === 'causas' ? 'active' : ''}`}>
                    <ul className="revolucao-lista">
                      {item.causas.map((detalhe, index) => (
                        <li key={index}>{detalhe}</li>
                      ))}
                    </ul>
                  </div>

                  <div className={`tab-content ${activeTab[item.id] === 'consequencias' ? 'active' : ''}`}>
                    <ul className="revolucao-lista">
                      {item.consequencias.map((detalhe, index) => (
                        <li key={index}>{detalhe}</li>
                      ))}
                    </ul>
                  </div>

                  <div className="revolucao-actions">
                    <button
                      className={`btn-concluir ${progresso[item.id] ? 'concluido' : ''}`}
                      onClick={() => marcarComoConcluido(item.id)}
                      disabled={progresso[item.id]}
                    >
                      {progresso[item.id] ? "Conte√∫do Conclu√≠do" : "Marcar como Conclu√≠do"}
                    </button>
                    {progresso[item.id] && (
                      <button
                        className="btn-remover-concluido"
                        onClick={() => marcarComoNaoConcluido(item.id)}
                      >
                        Remover Conclus√£o
                      </button>
                    )}
                  </div>
                </div>
              </div>
            )}
          </section>
        ))}
      </main>
    </div>
  );
}

export default Demografia;
